{"version":3,"sources":["components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarComponent","activeStyle","fontWeight","color","className","exact","to","App","Navbar","id","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0NA4BeA,MAzBf,WAEE,IAAMC,EAAY,CAChBC,WAAY,OACZC,MAAO,SAGT,OACE,8BACI,sBAAKC,UAAU,eAAf,UACI,uDAGA,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIF,UAAU,YAC1BH,YAAaA,EADnB,kBAEA,cAAC,IAAD,CAASK,GAAG,WAAWF,UAAU,YAAYH,YAAaA,EAA1D,6BACA,cAAC,IAAD,CAASK,GAAG,YAAYF,UAAU,YAAYH,YAAaA,EAA3D,0BACA,cAAC,IAAD,CAASK,GAAG,SAASF,UAAU,YAAYH,YAAaA,EAAxD,4B,OCWDM,MA1Bf,WAEE,OACE,sBAAKH,UAAU,MAAf,UACE,cAACI,EAAD,IACA,qBAAKC,GAAG,YAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,OAAK,EAACK,KAAK,MAGlB,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,kDAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,+CAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,0DCXGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACL,cAAC,IAAD,UACA,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3b18bccc.chunk.js","sourcesContent":["import React from \"react\"\nimport { NavLink } from \"react-router-dom\"\n\nfunction NavbarComponent() {\n\n  const activeStyle={\n    fontWeight: \"bold\",\n    color: \"black\"\n  }\n\n  return (\n    <div>\n        <div className=\"navbarParent\">\n            <div>\n                CNFT Twitter Monitor\n            </div>\n            <div className=\"navbarItems\">\n                <NavLink exact to=\"/\" className=\"linkStyle\" \n                      activeStyle={activeStyle}>Home</NavLink>\n                <NavLink to=\"/monitor\" className=\"linkStyle\" activeStyle={activeStyle}>Twitter Monitor</NavLink>\n                <NavLink to=\"/projects\" className=\"linkStyle\" activeStyle={activeStyle}>NFT Projects</NavLink>\n                <NavLink to=\"/About\" className=\"linkStyle\" activeStyle={activeStyle}>About</NavLink>\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default NavbarComponent\n","import './App.css';\n// import \"bootstrap/dist/bootstrap.min.css\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport NavbarComponent from \"./components/Navbar.js\";\n// import OtherComponent from \"./components/chart.js\";\nimport { Switch, Route } from 'react-router-dom';\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <NavbarComponent/> \n      <div id=\"container\">\n        <Switch> \n          <Route exact path=\"/\">\n            {/* <OtherComponent/> */}\n          </Route>\n          <Route path=\"/projects\"> \n            <div>test projects</div>\n          </Route>\n          <Route path=\"/about\">\n            <div>test about</div>\n          </Route>\n          <Route path=\"/monitor\">\n            <div>test monitor</div>\n          </Route>\n        </Switch> \n      </div>\n    </div>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nimport {BrowserRouter as Router}  from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n    <App /> \n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}